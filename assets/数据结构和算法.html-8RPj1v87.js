import{_ as e,o as a,c as p,e as t}from"./app-e94K_zRz.js";const i={},l=t('<h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h2><h3 id="栈" tabindex="-1"><a class="header-anchor" href="#栈"><span>栈</span></a></h3><p>是 JavaScript 中用来存储<code>基本类型值</code>和<code>函数调用记录</code>的内存空间，它是一个静态分配的内存池，由 JavaScript 引擎自动分配和回收。栈内存中存储的数据以 <code>先进后出（LIFO）</code> 的方式存储，每当调用一个函数时，就会将函数的调用记录压入栈中，当函数执行完成后，会将其记录从栈中弹出，返回到上一个函数的执行环境。栈内存中存储的数据有以下几种类型：</p><ul><li>基本数据类型：包括 undefined、null、布尔值、数字和字符串等。</li><li>函数调用记录：每当调用一个函数时，就会将函数的调用记录压入栈中。</li><li>引用类型的引用指针</li></ul><p>回收： 当函数执行完成后，它的执行环境（包括局部变量和参数）就会被销毁，栈内存中存储的数据也会被清除。</p><h3 id="堆" tabindex="-1"><a class="header-anchor" href="#堆"><span>堆</span></a></h3><p>是一种用于存储<code>复杂数据</code>结构（例如对象和数组）的内存区域，它是一个动态分配的内存池。堆内存中存储的数据是以键值对的形式存储的，可以动态地添加和删除属性。JavaScript 中的对象、数组等引用类型数据都存储在堆内存中，它们的引用地址存储在栈内存中。</p><p>回收：需要通过垃圾回收机制来判断是否可以回收，当一个对象没有任何引用指向它时，就会被判定为垃圾对象，垃圾回收机制会自动回收它所占用的堆内存空间。</p><h3 id="未写" tabindex="-1"><a class="header-anchor" href="#未写"><span>未写</span></a></h3><p>数组 (Array): 一组有序的元素集合，可以通过索引访问和修改元素。</p><p>对象 (Object): 键值对的集合，用于表示复杂的数据结构。</p><p>字符串 (String): 由字符组成的数据结构，用于存储和操作文本。</p><p>链表 (Linked List): 由节点组成的数据结构，每个节点包含数据和指向下一个节点的引用。</p><p>栈 (Stack): 后进先出（LIFO）的数据结构，只允许在栈顶进行插入和删除操作。</p><p>队列 (Queue): 先进先出（FIFO）的数据结构，允许在队尾插入元素，在队头删除元素。</p><p>树 (Tree): 由节点和边组成的层次结构，常见的树结构有二叉树、平衡二叉树、堆、红黑树等。</p><p>图 (Graph): 由节点和边组成的非线性结构，用于表示节点之间的关系。</p><p>哈希表 (Hash Table): 基于键值对的数据结构，通过哈希函数将键映射到存储位置。</p><p>集合 (Set): 一组唯一值的无序集合，不允许重复元素。</p><p>堆 (Heap): 一种特殊的树结构，通常用于实现优先队列等数据结构。</p><p>字典 (Dictionary): 键值对的集合，提供通过键快速访问和修改值的功能。</p><p>栈 (Stack): 后进先出（LIFO）的数据结构，只允许在栈顶进行插入和删除操作。</p><p>链表 (Linked List): 由节点组成的数据结构，每个节点包含数据和指向下一个节点的引用。</p><p>队列 (Queue): 先进先出（FIFO）的数据结构，允许在队尾插入元素，在队头删除元素。</p><p>这些数据结构在前端开发中扮演着重要的角色，不同的数据结构适用于不同的场景和问题。在实际开发中，根据需求选择合适的数据结构可以提高代码的效率和可维护性。</p>',25),n=[l];function c(s,r){return a(),p("div",null,n)}const o=e(i,[["render",c],["__file","数据结构和算法.html.vue"]]),h=JSON.parse('{"path":"/js/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[{"level":3,"title":"栈","slug":"栈","link":"#栈","children":[]},{"level":3,"title":"堆","slug":"堆","link":"#堆","children":[]},{"level":3,"title":"未写","slug":"未写","link":"#未写","children":[]}]}],"git":{"updatedTime":1711422640000,"contributors":[{"name":"zqy","email":"1324980809@qq.com","commits":1}]},"filePathRelative":"js/数据结构和算法.md"}');export{o as comp,h as data};
