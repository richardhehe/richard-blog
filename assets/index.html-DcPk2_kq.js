import{_ as i,o as l,c as e,e as t}from"./app-e94K_zRz.js";const n={},s=t('<h2 id="工程化是什么" tabindex="-1"><a class="header-anchor" href="#工程化是什么"><span>工程化是什么</span></a></h2><p>很多人总是在问：工程化是什么呢？</p><p>其实这个问题我以前也想过，什么是工程化呢？但是其实我每一年都会有新的想法：</p><ul><li>第一年：工程化是<code>脚手架、打包</code></li><li>第二年：工程化是<code>前端、中台、CI/CD</code></li><li>第三年：工程化是<code>全栈、项目基建、效能</code></li></ul><p>其实工程化这个概念，说小很小，说大很大，但是我可以很肯定地跟大家说：工程化的目的，是提高项目效能、健壮性、可维护性、质量</p><p>至于很多人问我的：工程化应该学什么呢？</p><p>其实这个不好说，因为工程化只是一个思想，并不是一套死板的规则，所以每个公司可能都不一样，用到的技术也不一样，但是目的都是一样的，无非就是为了提高项目效能、健壮性、可维护性、质量</p><p>我只能告诉大家一些，我在以往公司里接触过的工程化技术栈~</p><p><strong>前端主要技术</strong></p><ul><li>Vue：国内市场占比最高，要学</li><li>React：可私底下学一下，基本使用</li><li>Angular：可不学</li><li>TypeScript：团队开发，建议学</li></ul><p><strong>中台</strong></p><p>Nestjs：想学 Nodejs 的朋友可以学一下，涉及了 typeorm、mysql、redis等知识</p><p><strong>打包工具</strong></p><ul><li>Webpack：打包工具，至少要了解优化打包的措施，要会写插件</li><li>Vite：打包工具，快在哪要知道，要会写插件</li><li>Rollup：经常是开发依赖包时，用来打包的</li></ul><p><strong>项目基建</strong></p><ul><li>组件库：维护组件库，提高页面开发效率</li><li>工具库：维护公司内部常用工具函数</li><li>脚手架模板：搭建一套适合自己公司的通用脚手架，很有必要</li><li>规范：制定代码规范，包括 eslint、prettier、stylelint、husky</li><li>监控：搭建一套项目的监控系统，包括用户行为监控、错误监控、行为埋点等等</li><li>文档 &amp; 知识库：维护一些文档以及知识库，提高整体开发水平</li><li>Code Review：提高代码质量</li><li>单元测试：使公共代码更加健壮，常用 jest、vitest</li><li>国际化i18n、换肤</li></ul><p><strong>CI/CD &amp; 运维</strong></p><ul><li>CI/CD通常不需要自己去搭建，都有现成的工具，所以我们也要去了解这些工具的基本使用</li><li>Github Actions：可以拿个人项目来练习</li><li>Gitlab CI：流水线，构建发布</li><li>Jenkins：很出名的，这个是 Java 写的，很多公司用</li><li>Nginx：接口转发、灰度发布等等</li></ul>',18),o=[s];function p(r,a){return l(),e("div",null,o)}const d=i(n,[["render",p],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/engineering/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"工程化是什么","slug":"工程化是什么","link":"#工程化是什么","children":[]}],"git":{"updatedTime":1713272369000,"contributors":[{"name":"zqy","email":"1324980809@qq.com","commits":3}]},"filePathRelative":"engineering/index.md"}');export{d as comp,u as data};
